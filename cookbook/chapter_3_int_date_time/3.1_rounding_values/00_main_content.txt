1、问题：我们想将一个浮点数取正到固定的小数位
2、方法：round(value, ngigits)
>>> round(1.23, 1)
1.2
>>> round(1.27, 1)
1.3
>>> round(-1.27, 1)
-1.3
>>> round(1.25361, 3)
1.254
取证操作会取到离该值最接近的那个偶数上，也就是说像1.5和2.5这样的值都会取整到2
>>> round(1.5, 0)
2.0
>>> round(2.5, 0)
2.0
>>> round(3.5, 0)
4.0
传递给round()的参数ndigits可以是负数，在这种情况下会相应地取整到十位、百位、千位等
>>> a = 16256678
>>> round(a, -1)
16256680
>>> round(a, -2)
16256700
>>> round(a, -3)
16257000
3、讨论
在对值进行输出时别把取整和格式化操作混为一谈。如果只是将数值以固定的位数输出，一般来说是用不着round()的。相反，只是格式化时指定所需要的精度就可以了
>>> x = 1.6586775
>>> "%0.1f" % x
'1.7'
>>> "%1.1f" % x
'1.7'
>>> "%2.1f" % x
'1.7'
>>> "%3.1f" % x
'1.7'
>>> print("%3.1f" % x)
1.7
>>> print("aa%3.1faa" % x)
aa1.7aa
>>> print("aa%4.1faa" % x)
aa 1.7aa
>>> print("aa%5.1faa" % x)
aa  1.7aa

