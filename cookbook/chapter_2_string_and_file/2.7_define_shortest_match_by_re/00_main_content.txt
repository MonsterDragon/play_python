问题：如何用re的非贪婪模式进行匹配
方法：?
这个问题通常会在匹配的文本被一对开始和结束分隔符抱起来的时候出现
>>> import re
>>> str_pat = re.compile(r'\"(.*)\"')
>>> text1 = 'COmpter says "no."'
>>> text1.sub(text1)
>>> str_pat.match(text1)
>>> str_pat.findall(text1)
['no.']
>>> text2 = 'Computer says "no." Phone says yes'
>>> str_pat.findall(text2)
['no.']
>>> text2 = 'Computer says "no." Phone says "yes"'
>>> str_pat.findall(text2)
['no." Phone says "yes']
re模块尝试去匹配包含引号中的文本。但是，*操作符在正则表达式中采用的是贪心策略，所以匹配过程是基于找出最长的可能匹配进行的。要解决这个问题，只要在模式中的*操作符后加上?修饰符就可以了
>>> str_pat = re.compile(r'\"(.*?)\"')
>>> str_pat.findall(text2)
['no.', 'yes']

