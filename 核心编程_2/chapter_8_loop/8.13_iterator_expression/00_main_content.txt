生成器在每次计算出一个条目之后，把这个条目yield出来。程程器表达式使用了延迟计算，所以它使用内存上更有效
生成器表达式
(expr for iter_var in iterable if cond_expr)
1、磁盘文件样例
>>> data = open('00_main_content.txt', 'r')
>>> sum(len(word) for line in data for word in line.split())
98
2、交叉配对样例
rows = [1, 3, 2, 12]
def cols():
    yield 12
    yield "aa"
    yield "av"
x_product_pairs = ((i, j) for i in rows for j in cols())
>>> for pair in x_product_pairs:
...     print(pair)
... 
(1, 12)
(1, 'aa')
(1, 'av')
(3, 12)
(3, 'aa')
(3, 'av')
(2, 12)
(2, 'aa')
(2, 'av')
(12, 12)
(12, 'aa')
(12, 'av')
3、重构样例
print(max(len(x) for x in open("00_main_content.txt")))
>>> print(max(len(x) for x in open("00_main_content.txt")))
61

