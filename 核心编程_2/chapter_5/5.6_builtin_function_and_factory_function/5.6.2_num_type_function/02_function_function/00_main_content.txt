1、abs()：返回绝对值
abs(-1)
1
abs(1.2-2.1j)
2.418677
2、coerce()：自定义两个数值类型转换的方法,返回一个包含类型转换完毕的元组
coerce(1.3, 2)
(1.3, 2.0)
3、divmod()：将除法和取余运算结合起来，返回一个包含商和余数的元组，对于整数就是地板除和取余操作的结果。对浮点型来说，返回的商部分是math.floor(num1/num2)
divmod(10, 2.5)
(4.0, 0.0)
4、pow()：指数运算，接受第三个参数，pow()先进行指数运算再将运算结果和第三个参数进行取余运算。主要用于密码运算
5、round()：对浮点数进行四舍五入。第二个参数告诉函数将最后的结果保留几位小数
round(3.231, 2)
>>> 3.23
>>> import math
>>> print math.pi
>>> for i in range(10):
...     print round(math.pi, i)
... 
3.0
3.1
3.14
3.142
3.1416
3.14159
3.141593
3.1415927
3.14159265
3.141592654
int()：直接截取小数部分（返回整数）
round()：最接近原数的数值（返回浮点数）
math.floor()：最接近原数但小于原数的整型（返回浮点数）
>>> import math
>>> for i in (.2, .7, 1.2, 1.7, -.2, -.7, -1.2, -1.7):
...     print "int(%.1f)\t%+.1f" % (i, float(int(i)))
...     print "floor(%.1f)\t%+.1f" % (i, math.floor(i))
...     print "round(%.1f)\t%+.1f" % (i, round(i))
... 
int(0.2)	+0.0
floor(0.2)	+0.0
round(0.2)	+0.0
int(0.7)	+0.0
floor(0.7)	+0.0
round(0.7)	+1.0
int(1.2)	+1.0
floor(1.2)	+1.0
round(1.2)	+1.0
int(1.7)	+1.0
floor(1.7)	+1.0
round(1.7)	+2.0
int(-0.2)	+0.0
floor(-0.2)	-1.0
round(-0.2)	-0.0
int(-0.7)	+0.0
floor(-0.7)	-1.0
round(-0.7)	-1.0
int(-1.2)	-1.0
floor(-1.2)	-2.0
round(-1.2)	-1.0
int(-1.7)	-1.0
floor(-1.7)	-2.0
round(-1.7)	-2.0

