Python代码的执行由Python虚拟机（也叫解释器主循环）来控制。Python解释器中可以运行“多个线程”，但是在任意时刻，只有一个线程在解释其中运行
对Python虚拟机的访问由全局解释器锁（GIL）来控制，正式这个锁能保证同一时刻只有一个线程在运行。在多线程环境中，Python虚拟机按以下方式执行
1、设置GIL
2、切换到一个线程去运行
3、运行：
	a 指定数量的字节码的指令 或者
	b 线程主动让出控制（time.sleep()）
4、把线程设置为睡眠状态
5、解锁GIL
6、再次重复以上步骤
对所有面向I/O的程序来说，GIL会在这个I/O调用前被释放，以允许其他的线程在这个线程等待I/O的时候运行。如果某线程并未使用很多I/O操作，它会在自己的时间片内一直占用处理器（和GIL）。这就是说，I/O密集型的Python程序比计算密集型的程序更能充分利用多线程环境的好处
python/ceval.c文件
